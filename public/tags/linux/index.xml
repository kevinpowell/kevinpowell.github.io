<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on A little blog of things I made work</title>
    <link>http://localhost:1313/tags/linux/</link>
    <description>Recent content in Linux on A little blog of things I made work</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 Apr 2025 17:10:36 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creality Halot One From Linux</title>
      <link>http://localhost:1313/posts/creality-halot-one-from-linux/</link>
      <pubDate>Tue, 22 Apr 2025 17:10:36 -0700</pubDate>
      <guid>http://localhost:1313/posts/creality-halot-one-from-linux/</guid>
      <description>&lt;p&gt;This is not much of my original work.  But here goes anyway &amp;ndash; I got a Creality Halot One for cheap&#xA;on EBay.  It&amp;rsquo;s not a bad little resin printer.  However, the mfr software (Halot Box) is windows only.&#xA;I got a little tired of having to spin up my Windows VM in order to start up a print.  So, I went&#xA;looking for linux native options.&lt;/p&gt;&#xA;&lt;p&gt;git clone &lt;a href=&#34;https://github.com/danielkucera/creality-remote-control.git&#34;&gt;https://github.com/danielkucera/creality-remote-control.git&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;danielkucera has done a fine job with that project &amp;ndash; it is just a little html/javascript that one&#xA;loads up in a browser.  The javascript talks to the Halot One, and allows control of the printer (send file,&#xA;start, stop).  It is spartan in its design aesthetic, which I like.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Usb C Dock Audio</title>
      <link>http://localhost:1313/posts/usb-c-dock-audio/</link>
      <pubDate>Mon, 17 Feb 2025 16:13:05 -0800</pubDate>
      <guid>http://localhost:1313/posts/usb-c-dock-audio/</guid>
      <description>&lt;p&gt;I upgraded my audio setup at my desk by adding a new amplifier (ZK AS21) and nice speakers.&#xA;Tried out the amp with my phone as a source and everything sounded great.  Unfortunately, when&#xA;using my USB-C dock with onboard KTMicro (KT_USB_AUDIO) audio things sounded terrible: buzzing,&#xA;weird hooting noises, etc.  At first I thought it was a ground-loop problem but adding ground isolation&#xA;didn&amp;rsquo;t fix things.  What did help was adding a circuit in-line between the dock and the amp to reduce the&#xA;impedance seen by the dock.  As far as I can tell, the dock&amp;rsquo;s 3.5mm TRRS output is optimized for (low impedance)&#xA;headphones and things go poorly with a high impedance amp connected there.&#xA;Also, the amp wants stereo 3.5mm in (TRS) while the dock has TRRS (with mic)&#xA;out &amp;ndash; so I got a splitter from Amazon to do the TRRS -&amp;gt; TRS conversion.&#xA;&lt;a href=&#34;https://www.vwlowen.co.uk/radio/headphone2linein/headphones.htm&#34; title=&#34;Headphone to Line-In&#34;&gt;Headphone to Line-In&lt;/a&gt;&#xA;There is a lot of conflicting info about the assignments of the conductors in the trrs cable.&#xA;I found that my dock uses tip for left audio, ring1 for right audio, ring2 for ground, and the sleeve for mic.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
